{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","thread_local","--edition=2018","/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=ae33cc5b2d963f34","-C","extra-filename=-ae33cc5b2d963f34","--out-dir","/home/ipfs/RustLearning/TalentPlan_kvs/kvs/target/rls/debug/deps","-L","dependency=/home/ipfs/RustLearning/TalentPlan_kvs/kvs/target/rls/debug/deps","--extern","once_cell=/home/ipfs/RustLearning/TalentPlan_kvs/kvs/target/rls/debug/deps/libonce_cell-721d972fd34eab61.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/RustLearning/TalentPlan_kvs/kvs/target/rls/debug/deps/libthread_local-ae33cc5b2d963f34.rmeta"},"prelude":{"crate_id":{"name":"thread_local","disambiguator":[15998166475359317067,3425670332378582857]},"crate_root":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src","external_crates":[{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","num":18,"id":{"name":"once_cell","disambiguator":[17778840383938099424,16744949517116412811]}}],"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":333,"byte_end":18971,"line_start":8,"line_end":611,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2587,"byte_end":2601,"line_start":74,"line_end":74,"column_start":18,"column_end":32},"alias_span":null,"name":"CachedIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2603,"byte_end":2616,"line_start":74,"line_end":74,"column_start":34,"column_end":47},"alias_span":null,"name":"CachedIterMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2618,"byte_end":2635,"line_start":74,"line_end":74,"column_start":49,"column_end":66},"alias_span":null,"name":"CachedThreadLocal","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":333,"byte_end":18971,"line_start":8,"line_end":611,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":70},{"krate":0,"index":97},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":265},{"krate":0,"index":270},{"krate":0,"index":199},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":212},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250}],"decl_id":null,"docs":" Per-object thread-local storage","sig":null,"attributes":[{"value":"/ Per-object thread-local storage","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":333,"byte_end":368,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":369,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This library provides the `ThreadLocal` type which allows a separate copy of","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":373,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ an object to be used for each thread. This allows for per-object","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":454,"byte_end":522,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ thread-local storage, unlike the standard library's `thread_local!` macro","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":523,"byte_end":600,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ which only allows static thread-local storage.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":601,"byte_end":651,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":652,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Per-thread objects are not destroyed when a thread exits. Instead, objects","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":656,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ are only destroyed when the `ThreadLocal` containing them is destroyed.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":735,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can also iterate over the thread-local values of all thread in a","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":815,"byte_end":887,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":888,"byte_end":967,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ only be done if you have mutable access to the `ThreadLocal` object, which","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":968,"byte_end":1046,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ guarantees that you are the only thread currently accessing it.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1047,"byte_end":1114,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that since thread IDs are recycled when a thread exits, it is possible","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1119,"byte_end":1198,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ for one thread to retrieve the object of another thread. Since this can only","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1199,"byte_end":1279,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ occur after a thread has exited this does not lead to any race conditions.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1280,"byte_end":1358,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1363,"byte_end":1377,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1378,"byte_end":1381,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Basic usage of `ThreadLocal`:","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1382,"byte_end":1415,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1416,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1420,"byte_end":1431,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1432,"byte_end":1466,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ let tls: ThreadLocal<u32> = ThreadLocal::new();","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1467,"byte_end":1518,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(tls.get(), None);","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1519,"byte_end":1551,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tls.get_or(|| 5), &5);","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1552,"byte_end":1589,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(tls.get(), Some(&5));","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1590,"byte_end":1626,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1627,"byte_end":1634,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1635,"byte_end":1638,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Combining thread-local values into a single result:","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1639,"byte_end":1694,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1699,"byte_end":1710,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1711,"byte_end":1745,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1746,"byte_end":1769,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1770,"byte_end":1794,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/ use std::thread;","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1795,"byte_end":1815,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let tls = Arc::new(ThreadLocal::new());","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1820,"byte_end":1863,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Create a bunch of threads to do stuff","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1868,"byte_end":1912,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ for _ in 0..5 {","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1913,"byte_end":1932,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/     let tls2 = tls.clone();","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1933,"byte_end":1964,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1965,"byte_end":1996,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/         // Increment a counter to count some event...","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":1997,"byte_end":2054,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/         let cell = tls2.get_or(|| Cell::new(0));","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2055,"byte_end":2107,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/         cell.set(cell.get() + 1);","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2108,"byte_end":2145,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     }).join().unwrap();","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2146,"byte_end":2173,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2174,"byte_end":2179,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2180,"byte_end":2183,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Once all threads are done, collect the counter values and return the","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2184,"byte_end":2259,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ // sum of all thread-local counter values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2260,"byte_end":2306,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/ let tls = Arc::try_unwrap(tls).unwrap();","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2307,"byte_end":2351,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/ let total = tls.into_iter().fold(0, |x, y| x + y.get());","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2352,"byte_end":2412,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(total, 5);","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2413,"byte_end":2438,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2439,"byte_end":2446,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2448,"byte_end":2470,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"allow(clippy :: mutex_atomic)","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":2471,"byte_end":2502,"line_start":67,"line_end":67,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":11},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19363,"byte_end":19380,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"CachedThreadLocal","qualname":"::cached::CachedThreadLocal","value":"CachedThreadLocal {  }","parent":null,"children":[{"krate":0,"index":13}],"decl_id":null,"docs":" Wrapper around [`ThreadLocal`].","sig":null,"attributes":[{"value":"/ Wrapper around [`ThreadLocal`].","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19100,"byte_end":19135,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19136,"byte_end":19139,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This used to add a fast path for a single thread, however that has been","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19140,"byte_end":19215,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ obsoleted by performance improvements to [`ThreadLocal`] itself.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19216,"byte_end":19284,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19285,"byte_end":19351,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19667,"byte_end":19670,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<CachedThreadLocal<T>>::new","value":"pub fn new() -> CachedThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `CachedThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19597,"byte_end":19641,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19646,"byte_end":19655,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19874,"byte_end":19877,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"get","qualname":"<CachedThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19787,"byte_end":19848,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19853,"byte_end":19862,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20053,"byte_end":20059,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"get_or","qualname":"<CachedThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19937,"byte_end":20012,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20017,"byte_end":20027,"line_start":39,"line_end":39,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20032,"byte_end":20041,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20365,"byte_end":20375,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<CachedThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20174,"byte_end":20249,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20254,"byte_end":20324,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20329,"byte_end":20339,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20344,"byte_end":20353,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20839,"byte_end":20847,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<CachedThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> CachedIterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20519,"byte_end":20587,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20592,"byte_end":20595,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20600,"byte_end":20673,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20678,"byte_end":20748,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20753,"byte_end":20813,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20818,"byte_end":20827,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21337,"byte_end":21342,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"clear","qualname":"<CachedThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":20968,"byte_end":21042,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21047,"byte_end":21085,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21090,"byte_end":21093,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21098,"byte_end":21171,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21176,"byte_end":21246,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21251,"byte_end":21311,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21316,"byte_end":21325,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22026,"byte_end":22040,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<CachedThreadLocal<T>>::get_or_default","value":"pub fn get_or_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21913,"byte_end":21988,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21993,"byte_end":22014,"line_start":105,"line_end":105,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22504,"byte_end":22517,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"CachedIterMut","qualname":"::cached::CachedIterMut","value":"CachedIterMut {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Mutable iterator over the contents of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `CachedThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22365,"byte_end":22429,"line_start":119,"line_end":119,"column_start":1,"column_end":65}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22430,"byte_end":22492,"line_start":120,"line_end":120,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":23056,"byte_end":23070,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"CachedIntoIter","qualname":"::cached::CachedIntoIter","value":"CachedIntoIter {  }","parent":null,"children":[{"krate":0,"index":62}],"decl_id":null,"docs":" An iterator that moves out of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `CachedThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22924,"byte_end":22980,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22981,"byte_end":23044,"line_start":142,"line_end":142,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":3445,"byte_end":3456,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"ThreadLocal","qualname":"::ThreadLocal","value":"ThreadLocal {  }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Thread-local variable wrapper","sig":null,"attributes":[{"value":"/ Thread-local variable wrapper","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":3333,"byte_end":3366,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":3367,"byte_end":3370,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](index.html) for more.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":3371,"byte_end":3433,"line_start":101,"line_end":101,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4956,"byte_end":4959,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadLocal<T>>::new","value":"pub fn new() -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `ThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4906,"byte_end":4944,"line_start":154,"line_end":154,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":5253,"byte_end":5266,"line_start":162,"line_end":162,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ThreadLocal<T>>::with_capacity","value":"pub fn with_capacity(usize) -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\n access the thread local it will never reallocate. The capacity may be rounded up to the\n nearest power of two.\n","sig":null,"attributes":[{"value":"/ Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":5024,"byte_end":5115,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ access the thread local it will never reallocate. The capacity may be rounded up to the","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":5120,"byte_end":5211,"line_start":160,"line_end":160,"column_start":5,"column_end":96}},{"value":"/ nearest power of two.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":5216,"byte_end":5241,"line_start":161,"line_end":161,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6207,"byte_end":6210,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"get","qualname":"<ThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6134,"byte_end":6195,"line_start":187,"line_end":187,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6417,"byte_end":6423,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"get_or","qualname":"<ThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6315,"byte_end":6390,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6395,"byte_end":6405,"line_start":194,"line_end":194,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6801,"byte_end":6811,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<ThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6624,"byte_end":6699,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6704,"byte_end":6774,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":6779,"byte_end":6789,"line_start":207,"line_end":207,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":8938,"byte_end":8942,"line_start":270,"line_end":270,"column_start":12,"column_end":16},"name":"iter","qualname":"<ThreadLocal<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T> where T: Sync","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the local values of all threads in unspecified\n order.","sig":null,"attributes":[{"value":"/ Returns an iterator over the local values of all threads in unspecified","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":8748,"byte_end":8823,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ order.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":8828,"byte_end":8838,"line_start":267,"line_end":267,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":8843,"byte_end":8846,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This call can be done safely, as `T` is required to implement [`Sync`].","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":8851,"byte_end":8926,"line_start":269,"line_end":269,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9434,"byte_end":9442,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads in\n unspecified order.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads in","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9099,"byte_end":9169,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/ unspecified order.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9174,"byte_end":9196,"line_start":281,"line_end":281,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9201,"byte_end":9204,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9209,"byte_end":9282,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9287,"byte_end":9357,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9362,"byte_end":9422,"line_start":285,"line_end":285,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9929,"byte_end":9934,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"clear","qualname":"<ThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9574,"byte_end":9648,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9653,"byte_end":9691,"line_start":294,"line_end":294,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9696,"byte_end":9699,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9704,"byte_end":9777,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9782,"byte_end":9852,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":9857,"byte_end":9917,"line_start":298,"line_end":298,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10787,"byte_end":10801,"line_start":337,"line_end":337,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<ThreadLocal<T>>::get_or_default","value":"pub fn get_or_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10674,"byte_end":10749,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10754,"byte_end":10775,"line_start":336,"line_end":336,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":13753,"byte_end":13757,"line_start":437,"line_end":437,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" Iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":13674,"byte_end":13724,"line_start":435,"line_end":435,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14239,"byte_end":14246,"line_start":454,"line_end":454,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" Mutable iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14169,"byte_end":14227,"line_start":453,"line_end":453,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15282,"byte_end":15290,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" An iterator that moves out of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `ThreadLocal`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15203,"byte_end":15253,"line_start":482,"line_end":482,"column_start":1,"column_end":51}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19448,"byte_end":19465,"line_start":17,"line_end":17,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19570,"byte_end":19587,"line_start":23,"line_end":23,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21424,"byte_end":21441,"line_start":83,"line_end":83,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21886,"byte_end":21903,"line_start":103,"line_end":103,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22139,"byte_end":22156,"line_start":111,"line_end":111,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22340,"byte_end":22357,"line_start":117,"line_end":117,"column_start":43,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22604,"byte_end":22617,"line_start":125,"line_end":125,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22899,"byte_end":22912,"line_start":139,"line_end":139,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":23136,"byte_end":23150,"line_start":147,"line_end":147,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":23403,"byte_end":23417,"line_start":161,"line_end":161,"column_start":37,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":24221,"byte_end":24236,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":25465,"byte_end":25471,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":25926,"byte_end":25938,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":26071,"byte_end":26083,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/unreachable.rs","byte_start":28326,"byte_end":28332,"line_start":28,"line_end":28,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/unreachable.rs","byte_start":28658,"byte_end":28664,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4166,"byte_end":4177,"line_start":123,"line_end":123,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4211,"byte_end":4222,"line_start":125,"line_end":125,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4324,"byte_end":4335,"line_start":131,"line_end":131,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4885,"byte_end":4896,"line_start":153,"line_end":153,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10024,"byte_end":10035,"line_start":304,"line_end":304,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10653,"byte_end":10664,"line_start":334,"line_end":334,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10906,"byte_end":10917,"line_start":342,"line_end":342,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":11101,"byte_end":11112,"line_start":348,"line_end":348,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":11242,"byte_end":11249,"line_start":357,"line_end":357,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":13877,"byte_end":13881,"line_start":442,"line_end":442,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14153,"byte_end":14157,"line_start":451,"line_end":451,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14356,"byte_end":14363,"line_start":459,"line_end":459,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14742,"byte_end":14749,"line_start":471,"line_end":471,"column_start":37,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14792,"byte_end":14799,"line_start":472,"line_end":472,"column_start":33,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15047,"byte_end":15054,"line_start":476,"line_end":476,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15384,"byte_end":15392,"line_start":489,"line_end":489,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15864,"byte_end":15872,"line_start":504,"line_end":504,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15911,"byte_end":15919,"line_start":505,"line_end":505,"column_start":33,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19448,"byte_end":19465,"line_start":17,"line_end":17,"column_start":27,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":19570,"byte_end":19587,"line_start":23,"line_end":23,"column_start":15,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21424,"byte_end":21441,"line_start":83,"line_end":83,"column_start":32,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":21886,"byte_end":21903,"line_start":103,"line_end":103,"column_start":25,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22139,"byte_end":22156,"line_start":111,"line_end":111,"column_start":43,"column_end":60},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22340,"byte_end":22357,"line_start":117,"line_end":117,"column_start":43,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":11},"to":{"krate":1,"index":3931}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22604,"byte_end":22617,"line_start":125,"line_end":125,"column_start":37,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":22899,"byte_end":22912,"line_start":139,"line_end":139,"column_start":46,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":23136,"byte_end":23150,"line_start":147,"line_end":147,"column_start":28,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/cached.rs","byte_start":23403,"byte_end":23417,"line_start":161,"line_end":161,"column_start":37,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":24221,"byte_end":24236,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":25465,"byte_end":25471,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":25926,"byte_end":25938,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/thread_id.rs","byte_start":26071,"byte_end":26083,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/unreachable.rs","byte_start":28326,"byte_end":28332,"line_start":28,"line_end":28,"column_start":35,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":32315},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/unreachable.rs","byte_start":28658,"byte_end":28664,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4166,"byte_end":4177,"line_start":123,"line_end":123,"column_start":31,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4211,"byte_end":4222,"line_start":125,"line_end":125,"column_start":27,"column_end":38},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4324,"byte_end":4335,"line_start":131,"line_end":131,"column_start":24,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":4885,"byte_end":4896,"line_start":153,"line_end":153,"column_start":15,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10024,"byte_end":10035,"line_start":304,"line_end":304,"column_start":32,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10653,"byte_end":10664,"line_start":334,"line_end":334,"column_start":25,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":10906,"byte_end":10917,"line_start":342,"line_end":342,"column_start":43,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":11101,"byte_end":11112,"line_start":348,"line_end":348,"column_start":43,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":3931}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":11242,"byte_end":11249,"line_start":357,"line_end":357,"column_start":6,"column_end":13},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":13877,"byte_end":13881,"line_start":442,"line_end":442,"column_start":39,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14153,"byte_end":14157,"line_start":451,"line_end":451,"column_start":40,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":5567}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14356,"byte_end":14363,"line_start":459,"line_end":459,"column_start":32,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14742,"byte_end":14749,"line_start":471,"line_end":471,"column_start":37,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":14792,"byte_end":14799,"line_start":472,"line_end":472,"column_start":33,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":5567}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15047,"byte_end":15054,"line_start":476,"line_end":476,"column_start":47,"column_end":54},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15384,"byte_end":15392,"line_start":489,"line_end":489,"column_start":28,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15864,"byte_end":15872,"line_start":504,"line_end":504,"column_start":37,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.2/src/lib.rs","byte_start":15911,"byte_end":15919,"line_start":505,"line_end":505,"column_start":33,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5567}}]}